@model Online_SHopping_Cart.Models.Role_Table

@{
    ViewBag.Title = "ManageRole";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<h2>Manage Role</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal ">
        <h3>Add New Role</h3>

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.RoleName, "Role Name", htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.RoleName, new { htmlAttributes = new { @class = "text form-control " } })
                @Html.ValidationMessageFor(model => model.RoleName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RoleDesc, "Description", htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.RoleDesc, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RoleDesc, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>

    </div>
}
<div id="ajaxgrid">
    @{
        var gridview = new WebGrid(ViewBag.Roles, ajaxUpdateContainerId: "ajaxgrid", canSort: true, rowsPerPage: 5);
    }
    @gridview.GetHtml(
                tableStyle: "webGrid",
                headerStyle: "header",
                alternatingRowStyle: "altColor",
                selectedRowStyle: "clickable",
                mode: WebGridPagerModes.All,
            columns: new[]

        {


     gridview.Column(columnName:"RoleName", header: "Role Name",format: @<span>
        <span id="Name" class="read">@item.RoleName</span>
        @Html.TextBox("RoleName", (string)item.RoleName, new { @class = "edit cat",@style="display:none" })
        <label id="label1" class="text-danger"></label>
    </span>),


     gridview.Column(columnName: "RoleDesc", header: " Role Description", format: @<span>
        <span id="Description" class="read">@item.RoleDesc</span>
        @Html.TextBox("RoleDescription", (string)item.RoleDesc, new { @class = "edit",@style="display:none" })
        <label id="label2" class="text-danger"></label>
    </span> ),


       gridview.Column("", style: "button",
                format:
                @<text>
                    <button class="edit-case read btn btn-default btn-sm" id="@item.RoleId">
                        <span class="glyphicon glyphicon-pencil"></span>Edit
                    </button>
                    <button class="delete-case read btn btn-default btn-sm" id="@item.RoleId">
                        <span class="glyphicon glyphicon-trash"></span>Delete
                    </button>
                    <button class="update-case edit btn btn-default btn-sm" id="@item.RoleId" style="display:none">Update</button>
                    <button class="cancel-case edit btn btn-default btn-sm" id="@item.RoleId" style="display:none">Cancel</button>
                </text>)

    }
)
</div>

<link href="~/Content/bootstrap.css" rel="stylesheet" />
<link href="~/css/Adminstyle/Gridstyle.css" rel="stylesheet" />
<script src="~/scripts/jquery-1.10.2.min.js"></script>
<script src="~/scripts/jquery.validate.min.js"></script>
<script src="~/scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="~/scripts/Managerole.js"></script>
